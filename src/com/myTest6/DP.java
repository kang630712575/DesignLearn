package com.myTest6;

/**
 * 迪米特法则(Demeter Principle 最少知道原则)：即一个类对自己依赖的类知道的越少越好。也就是说，对于被依赖的类不管多么复杂，都尽量将
 * 逻辑封装在类的内部，对外除了提供的public方法，不对外泄露任何信息(只与直接的朋友通信)
 *
 * 直接的朋友：每个对象都会与其他对象有耦合关系，只要两个对象之间有耦合关系，我们就说这两个对象之间是朋友关系，耦合的方式很多，依赖关联、
 * 组合、聚合等。其中，我们称出现成员变量、方法参数，方法返回值的类为直接的朋友，而出现在局部变量中的类不是直接的朋友。也就是说，陌生的类
 * 最好不要以局部变量的形式出现在类的内部。
 */
public class DP {
}

/**
 * 合成/复用原则(Composite Reuse Principle)：原则是尽量使用合成/聚合的方式，而不是使用继承
 */